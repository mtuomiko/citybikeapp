openapi: 3.0.1
info:
  title: City Bike App API
  version: 0.0.8a
paths:
  /health:
    get:
      operationId: getHealth
      responses:
        "200":
          description: getHealth 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthResult'
  /health/{selector}:
    get:
      operationId: getHealth_1
      parameters:
      - name: selector
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HealthCheckType'
      responses:
        "200":
          description: getHealth_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthResult'
  /journey:
    get:
      tags:
      - journey
      summary: List journeys
      operationId: getJourneys
      parameters:
      - name: orderBy
        in: query
        description: Sort results by this property
        schema:
          type: string
          default: departureAt
          enum:
          - departureAt
          - arrivalAt
      - name: direction
        in: query
        description: Sort results in this direction
        schema:
          type: string
          default: desc
          enum:
          - asc
          - desc
      - name: pageSize
        in: query
        description: Limit amount of results. Can be limited by application configuration.
        schema:
          type: number
      - name: nextCursor
        in: query
        description: "Cursor to fetch the next page. Can expose some implementation\
          \ details, such as the values used in keyset pagination, but should be treated\
          \ as an opaque string."
        schema:
          type: string
      responses:
        "200":
          description: getJourneys 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneysResponse'
  /station:
    get:
      tags:
      - station
      summary: Get stations using pagination and optional text search.
      description: "Returns multiple stations with a maximum page size of given page\
        \ size parameter. If page size is not defined then application default is\
        \ used. Page number can be provided to paginate results. Optional search string\
        \ can be used to limit matches. Note that if paginating query params result\
        \ in no stations, the total pages count might not hold true! That is, there\
        \ could still be possible earlier results."
      operationId: getStations
      parameters:
      - name: search
        in: query
        description: Optional search string to limit station results. Will look for
          matches in station names and street addresses. Separate search words with
          + symbol.
        schema:
          type: string
          nullable: true
        example: kontu+tie
      - name: page
        in: query
        description: Optional pagination offset.
        schema:
          type: integer
          format: int32
          nullable: true
        example: "3"
      - name: pageSize
        in: query
        description: Optional page size.
        schema:
          type: integer
          format: int32
          nullable: true
        example: "25"
      responses:
        "200":
          description: getStations 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationsResponse'
  /station/limited:
    get:
      tags:
      - station
      summary: Get all stations
      description: Get all stations with limited information
      operationId: getAllStationsLimited
      responses:
        "200":
          description: getAllStationsLimited 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationsLimitedResponse'
  /station/{id}:
    get:
      tags:
      - station
      summary: Get single station information with statistics
      description: Single station information including journey statistics. Statistics
        are filtered using the optional query parameters. Note that malformed query
        parameters do not result in failure.
      operationId: getStationWithStatistics
      parameters:
      - name: id
        in: path
        description: Station ID
        required: true
        schema:
          type: integer
          format: int32
      - name: fromDate
        in: query
        description: Earliest journey date to include in station statistics
        schema:
          type: string
          format: date
          nullable: true
        example: 2021-06-15
      - name: toDate
        in: query
        description: Latest journey date to include in station statistics
        schema:
          type: string
          format: date
          nullable: true
        example: 2021-07-02
      responses:
        "200":
          description: getStationWithStatistics 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationDetailsWithStatisticsResponse'
components:
  schemas:
    CursorMeta:
      type: object
      properties:
        nextCursor:
          type: string
          nullable: true
    HealthCheckType:
      type: string
      enum:
      - LIVENESS
      - READINESS
    HealthResult:
      type: object
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/HealthStatus'
        details:
          $ref: '#/components/schemas/Object'
    HealthStatus:
      required:
      - description
      - name
      - operational
      - severity
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        operational:
          type: boolean
          nullable: true
        severity:
          type: integer
          format: int32
          nullable: true
    Journey:
      required:
      - arrivalStationId
      - arrivalTime
      - departureStationId
      - departureTime
      - distance
      - duration
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        departureTime:
          type: string
          format: date-time
        arrivalTime:
          type: string
          format: date-time
        departureStationId:
          type: integer
          format: int32
        arrivalStationId:
          type: integer
          format: int32
        distance:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
    JourneysResponse:
      required:
      - journeys
      - meta
      type: object
      properties:
        journeys:
          type: array
          items:
            $ref: '#/components/schemas/Journey'
        meta:
          $ref: '#/components/schemas/CursorMeta'
    Meta:
      required:
      - totalPages
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
    Object:
      type: object
    Station:
      required:
      - addressFinnish
      - capacity
      - cityFinnish
      - id
      - nameFinnish
      - operator
      type: object
      properties:
        id:
          type: integer
          format: int32
        nameFinnish:
          type: string
        addressFinnish:
          type: string
        cityFinnish:
          type: string
        operator:
          type: string
        capacity:
          type: integer
          format: int32
    StationDetails:
      required:
      - addressFinnish
      - addressSwedish
      - capacity
      - cityFinnish
      - citySwedish
      - id
      - latitude
      - longitude
      - nameEnglish
      - nameFinnish
      - nameSwedish
      - operator
      type: object
      properties:
        id:
          type: integer
          format: int32
        nameFinnish:
          type: string
        nameSwedish:
          type: string
        nameEnglish:
          type: string
        addressFinnish:
          type: string
        addressSwedish:
          type: string
        cityFinnish:
          type: string
        citySwedish:
          type: string
        operator:
          type: string
        capacity:
          type: integer
          format: int32
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
    StationDetailsWithStatisticsResponse:
      required:
      - station
      - statistics
      type: object
      properties:
        station:
          $ref: '#/components/schemas/StationDetails'
        statistics:
          $ref: '#/components/schemas/StationStatistics'
    StationLimited:
      required:
      - id
      - nameFinnish
      type: object
      properties:
        id:
          type: integer
          format: int32
        nameFinnish:
          type: string
    StationStatistics:
      required:
      - arrivalAverageDistance
      - arrivalCount
      - departureAverageDistance
      - departureCount
      - topStationsForArrivingHere
      - topStationsForDepartingTo
      type: object
      properties:
        departureCount:
          type: integer
          format: int64
        arrivalCount:
          type: integer
          format: int64
        departureAverageDistance:
          type: number
          format: double
        arrivalAverageDistance:
          type: number
          format: double
        topStationsForArrivingHere:
          type: array
          items:
            $ref: '#/components/schemas/TopStation'
        topStationsForDepartingTo:
          type: array
          items:
            $ref: '#/components/schemas/TopStation'
    StationsLimitedResponse:
      required:
      - stations
      type: object
      properties:
        stations:
          type: array
          items:
            $ref: '#/components/schemas/StationLimited'
    StationsResponse:
      required:
      - meta
      - stations
      type: object
      properties:
        stations:
          type: array
          items:
            $ref: '#/components/schemas/Station'
        meta:
          $ref: '#/components/schemas/Meta'
    TopStation:
      required:
      - id
      - journeyCount
      type: object
      properties:
        id:
          type: integer
          format: int32
        journeyCount:
          type: integer
          format: int64
