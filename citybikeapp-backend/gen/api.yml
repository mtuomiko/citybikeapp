openapi: 3.0.1
info:
  title: City Bike App API
  version: 0.0.5a
paths:
  /health:
    get:
      operationId: getHealth
      responses:
        "200":
          description: getHealth 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthResult'
  /health/{selector}:
    get:
      operationId: getHealth_1
      parameters:
      - name: selector
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HealthCheckType'
      responses:
        "200":
          description: getHealth_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthResult'
  /station/{id}:
    get:
      tags:
      - station
      summary: Get single station information with statistics
      description: Single station information including journey statistics. Statistics
        are filtered using the optional query parameters. Note that malformed optional
        query parameters do not result in failure.
      operationId: getStationWithStatistics
      parameters:
      - name: id
        in: path
        description: Station ID
        required: true
        schema:
          type: integer
          format: int32
      - name: fromDate
        in: query
        description: Earliest journey date to include in station statistics
        schema:
          type: string
          format: date
          nullable: true
        example: 2021-06-15
      - name: toDate
        in: query
        description: Latest journey date to include in station statistics
        schema:
          type: string
          format: date
          nullable: true
        example: 2021-07-02
      responses:
        "200":
          description: getStationWithStatistics 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationDetailsWithStatisticsResponse'
components:
  schemas:
    HealthCheckType:
      type: string
      enum:
      - LIVENESS
      - READINESS
    HealthResult:
      type: object
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/HealthStatus'
        details:
          $ref: '#/components/schemas/Object'
    HealthStatus:
      required:
      - description
      - name
      - operational
      - severity
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        operational:
          type: boolean
          nullable: true
        severity:
          type: integer
          format: int32
          nullable: true
    Object:
      type: object
    StationDetails:
      required:
      - addressFinnish
      - addressSwedish
      - capacity
      - cityFinnish
      - citySwedish
      - id
      - latitude
      - longitude
      - nameEnglish
      - nameFinnish
      - nameSwedish
      - operator
      type: object
      properties:
        id:
          type: integer
          format: int32
        nameFinnish:
          type: string
        nameSwedish:
          type: string
        nameEnglish:
          type: string
        addressFinnish:
          type: string
        addressSwedish:
          type: string
        cityFinnish:
          type: string
        citySwedish:
          type: string
        operator:
          type: string
        capacity:
          type: integer
          format: int32
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
    StationDetailsWithStatisticsResponse:
      required:
      - station
      - statistics
      type: object
      properties:
        station:
          $ref: '#/components/schemas/StationDetails'
        statistics:
          $ref: '#/components/schemas/StationStatistics'
    StationStatistics:
      required:
      - arrivalAverageDistance
      - arrivalCount
      - departureAverageDistance
      - departureCount
      - topStationsForArrivingHere
      - topStationsForDepartingTo
      type: object
      properties:
        departureCount:
          type: integer
          format: int64
        arrivalCount:
          type: integer
          format: int64
        departureAverageDistance:
          type: number
          format: double
        arrivalAverageDistance:
          type: number
          format: double
        topStationsForArrivingHere:
          type: array
          items:
            $ref: '#/components/schemas/TopStation'
        topStationsForDepartingTo:
          type: array
          items:
            $ref: '#/components/schemas/TopStation'
    TopStation:
      required:
      - id
      - journeyCount
      - nameEnglish
      - nameFinnish
      - nameSwedish
      type: object
      properties:
        id:
          type: integer
          format: int32
        nameFinnish:
          type: string
        nameSwedish:
          type: string
        nameEnglish:
          type: string
        journeyCount:
          type: integer
          format: int64
